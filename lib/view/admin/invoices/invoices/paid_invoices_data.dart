import 'package:flutter/material.dart';
import 'package:get/get.dart';
import 'package:getx_constants/constants/colors.dart';
import 'package:getx_constants/constants/fonts.dart';
import 'package:getx_constants/controller/admin/Invoice/invoice_data_controller.dart';
import 'package:intl/intl.dart';

class PaidInvoicesView extends StatelessWidget {
  final InvoiceDataController invoiceDataController = Get.find();

  PaidInvoicesView({Key? key}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    List<Map<String, dynamic>> paidInvoices =
        List<Map<String, dynamic>>.from(invoiceDataController.paidInvoices);

    paidInvoices.sort((a, b) => a['NO'].compareTo(b['NO']));

    return RefreshIndicator(
      onRefresh: () async {
        await invoiceDataController.postInvoiceStatus("PAID");
      },
      child: Padding(
        padding: const EdgeInsets.symmetric(horizontal: 20.0, vertical: 8.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Text(
              'Paid Invoices',
              style: TextStyle(
                fontSize: CustomFontSize.extraExtraLarge(context) * 1.5,
                fontWeight: FontWeight.bold,
              ),
            ),
            SizedBox(height: Get.height * 0.02),
            Expanded(
              child: paidInvoices.isEmpty
                  ? const Center(
                      child: Text('No Paid Invoices'),
                    )
                  : ListView.builder(
                      itemCount: paidInvoices.length,
                      itemBuilder: (context, index) {
                        Map<String, dynamic> invoice = paidInvoices[index];
                        String voucherNumber = invoice['NO'].toString();
                        String client = invoice['VNAME'].toString();
                        String serviceType = invoice['SNAME'].toString();
                        String remarks = invoice['REMARKS'].toString();
                        String generatedBy = invoice['U_ID'].toString();
                        String status = invoice['STATUS'].toString();
                        double amount =
                            double.parse(invoice['AMOUNT'].toString());
 String formattedAmount = NumberFormat('#,##0.00', 'en_US').format(amount);

                        return Column(
                          crossAxisAlignment: CrossAxisAlignment.start,
                          children: [
                            buildTextHeader("Client $client"),
                            SizedBox(height: Get.height * 0.02),
                            buildTextField("Invoice:" , voucherNumber),
                            buildTextField("Status", status),
                            buildTextField(
                                "Service Type", serviceType.toString()),
                            buildTextField("Amount", formattedAmount.toString()),
                            buildTextField(
                                "Generated By", generatedBy.toString()),
                            Center(
                              child: Text(
                                remarks,
                                style: TextStyle(
                                  fontSize: CustomFontSize.medium(Get.context!),
                                  fontWeight: FontWeight.bold,
                                ),
                              ),
                            ),
                            SizedBox(height: Get.height * 0.02),
                            const Divider(
                              color: AppColor.primaryTheme,
                              thickness: 1,
                            ),
                          ],
                        );
                      },
                    ),
            ),
          ],
        ),
      ),
    );
  }

  Widget buildTextHeader(String text, {Color? color, Color? textColor}) {
    return Container(
      decoration: BoxDecoration(
        color: color ?? AppColor.primaryTheme,
        borderRadius: BorderRadius.circular(12.0),
        border: Border.all(
          color: AppColor.white,
          width: 1,
        ),
        boxShadow: [
          BoxShadow(
            color: AppColor.black.withOpacity(0.1),
            spreadRadius: 2,
            blurRadius: 5,
            offset: const Offset(0, 3),
          ),
        ],
      ),
      width: Get.width,
      height: Get.height / 20,
      child: Center(
        child: Text(
          text,
          style: TextStyle(
            fontSize: 18,
            fontWeight: FontWeight.bold,
            color: textColor ?? AppColor.white,
          ),
        ),
      ),
    );
  }

  Widget buildTextField(String text, String value) {
    return Padding(
      padding: const EdgeInsets.symmetric(vertical: 8.0, horizontal: 8),
      child: Column(
        children: [
          Row(
            mainAxisAlignment: MainAxisAlignment.spaceBetween,
            children: [
              Text(
                text,
                style: TextStyle(
                  fontSize: CustomFontSize.medium(Get.context!),
                  fontWeight: FontWeight.bold,
                ),
              ),
              Text(
                value,
                style: TextStyle(
                  fontSize: CustomFontSize.medium(Get.context!),
                  fontWeight: FontWeight.bold,
                ),
              ),
            ],
          ),
          const Divider(
            color: AppColor.primaryTheme,
            thickness: 1,
          ),
        ],
      ),
    );
  }
}
