import 'package:flutter/material.dart';
import 'package:get/get.dart';
import 'package:getx_constants/constants/colors.dart';
import 'package:getx_constants/constants/custom_input.dart';
import 'package:getx_constants/constants/fonts.dart';
import 'package:getx_constants/controller/admin/Invoice/invoice_data_controller.dart';
import 'package:getx_constants/constants/button.dart';
import 'package:getx_constants/view/commen/animation.dart';
import 'package:intl/intl.dart';

class AllInvoicesView extends StatelessWidget {
  final InvoiceDataController invoiceDataController = Get.find();

  AllInvoicesView({super.key});

  @override
  Widget build(BuildContext context) {
    return RefreshIndicator(
      onRefresh: () async {
        await invoiceDataController.postInvoiceStatus("ALL");
      },
      child: Padding(
        padding: const EdgeInsets.symmetric(vertical: 8.0, horizontal: 20.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Text(
              'All Invoices',
              style: TextStyle(
                fontSize: CustomFontSize.extraExtraLarge(context) * 1.5,
                fontWeight: FontWeight.bold,
              ),
            ),
            SizedBox(height: Get.height * 0.02),
            Expanded(
              child: invoiceDataController.allInvoices.isEmpty
                  ? const Center(child: AnimatedBar())
                  : ListView.builder(
                      itemCount: invoiceDataController.allInvoices.length,
                      itemBuilder: (context, index) {
                        Map<String, dynamic> invoice =
                            invoiceDataController.allInvoices[index];
                        String voucherNumber = invoice['NO'].toString();
                        String client = invoice['VNAME'].toString();
                        String serviceType = invoice['SNAME'].toString();
                        String remarks = invoice['REMARKS'].toString();
                        String dateString = invoice['VDATE']['date'];
                        DateTime vdateTime = DateTime.parse(dateString);
                        String vdate =
                            DateFormat('dd/MM/yyyy').format(vdateTime);

                        String generatedBy = invoice['U_ID'].toString();
                        String status = invoice['STATUS'].toString();
                        double amount =
                            double.parse(invoice['AMOUNT'].toString());
                        String formattedAmount =
                            NumberFormat('#,##0.00', 'en_US').format(amount);

                        return Column(
                          crossAxisAlignment: CrossAxisAlignment.start,
                          children: [
                            _buildTextHeader("Client $client"),
                            SizedBox(height: Get.height * 0.02),
                            _buildTextField("Invoice:", voucherNumber),
                            _buildTextField("Date", vdate),
                            _buildTextField("Status", status),
                            _buildTextField("Service Type", serviceType),
                            _buildTextField(
                                "Amount", formattedAmount.toString()),
                            _buildTextField("Generated By", generatedBy),
                            Center(
                              child: Text(
                                remarks,
                                style: TextStyle(
                                  fontSize: CustomFontSize.medium(Get.context!),
                                  fontWeight: FontWeight.bold,
                                ),
                              ),
                            ),
                            SizedBox(height: Get.height * 0.02),
                            status == "PAID"
                                ? Container()
                                : Row(
                                    children: [
                                      Expanded(
                                        child: CustomButton(
                                          width: Get.width * 0.4,
                                          height: Get.height * 0.06,
                                          color: AppColor.green,
                                          isLoading: false,
                                          title: "Pay Now",
                                          onPressed: () {
                                            Get.dialog(CustomInputDialog());
                                          },
                                        ),
                                      ),
                                      SizedBox(width: Get.width * 0.02),
                                      Expanded(
                                        child: Obx(
                                          () => CustomButton(
                                            width: Get.width * 0.2,
                                            height: Get.height * 0.06,
                                            color: AppColor.red,
                                            isLoading: invoiceDataController
                                                .isLoading.value,
                                            title: "Print",
                                            onPressed: () async {
                                              
                                            },
                                          ),
                                        ),
                                      ),
                                    ],
                                  ),
                            SizedBox(height: Get.height * 0.02),
                            status == "PAID"
                                ? Container()
                                : const Divider(
                                    color: AppColor.primaryTheme,
                                    thickness: 1,
                                  ),
                          ],
                        );
                      },
                    ),
            ),
          ],
        ),
      ),
    );
  }

  Widget _buildTextHeader(String text, {Color? color, Color? textColor}) {
    return Container(
      decoration: BoxDecoration(
        color: color ?? AppColor.primaryTheme,
        borderRadius: BorderRadius.circular(12.0),
        border: Border.all(
          color: AppColor.white,
          width: 1,
        ),
        boxShadow: [
          BoxShadow(
            color: AppColor.black.withOpacity(0.1),
            spreadRadius: 2,
            blurRadius: 5,
            offset: const Offset(0, 3),
          ),
        ],
      ),
      width: Get.width,
      height: Get.height / 20,
      child: Center(
        child: Text(
          text,
          style: TextStyle(
            fontSize: 18,
            fontWeight: FontWeight.bold,
            color: textColor ?? AppColor.white,
          ),
        ),
      ),
    );
  }

  Widget _buildTextField(String text, String value) {
    return Padding(
      padding: const EdgeInsets.symmetric(vertical: 8.0, horizontal: 8),
      child: Column(
        children: [
          Row(
            mainAxisAlignment: MainAxisAlignment.spaceBetween,
            children: [
              SizedBox(
                width: Get.context!.width * 0.4,
                child: Text(
                  text,
                  style: TextStyle(
                    fontSize: CustomFontSize.medium(Get.context!),
                    fontWeight: FontWeight.bold,
                  ),
                ),
              ),
              SizedBox(
                width: Get.context!.width * 0.4,
                child: Text(
                  value,
                  textAlign: TextAlign.end,
                  style: TextStyle(
                    fontSize: CustomFontSize.medium(Get.context!),
                    fontWeight: FontWeight.bold,
                  ),
                ),
              ),
            ],
          ),
          const Divider(
            color: AppColor.primaryTheme,
            thickness: 1,
          ),
        ],
      ),
    );
  }
}
